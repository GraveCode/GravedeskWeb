// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    var ViewModel;
    ko.bindingHandlers.fadeVisible = {
      update: function(element, valueAccessor) {
        var value;
        value = valueAccessor();
        if (ko.utils.unwrapObservable(value)) {
          return $(element).fadeIn();
        } else {
          return $(element).fadeOut();
        }
      }
    };
    ViewModel = ko.validatedObservable({
      isAdmin: ko.observable(false),
      alert: ko.observable(null),
      success: ko.observable(true),
      from: ko.observable('').extend({
        email: true,
        required: true
      }),
      subject: ko.observable('').extend({
        required: true
      }),
      team: ko.observable(''),
      description: ko.observable('').extend({
        required: true
      }),
      addTicket: function(formElement) {
        var form;
        form = {
          from: this.from(),
          subject: this.subject(),
          team: this.team(),
          description: this.description()
        };
        return socket.emit('addTicket', form, function(err, msg) {
          if (err) {
            ViewModel().alert(err);
            return ViewModel().success(false);
          } else {
            ViewModel().alert(msg);
            ViewModel().success(true);
            ViewModel().subject('');
            ViewModel().subject.isModified(false);
            ViewModel().description('');
            ViewModel().description.isModified(false);
            return setTimeout((function() {
              return ViewModel().alert(null);
            }), 3000);
          }
        });
      }
    });
    return async.series([
      function(callback) {
        return $.ajax({
          url: "/node/getuser"
        }).done(function(userdata) {
          if (!userdata) {
            return window.location.replace("/node/google");
          } else {
            return callback(null, userdata);
          }
        });
      }, function(callback) {
        return socket.emit('isAdmin', function(res) {
          return callback(null, res);
        });
      }
    ], function(err, results) {
      ViewModel().from(results[0].emails[0].value);
      ViewModel().isAdmin(results[1]);
      return ko.applyBindings(ViewModel);
    });
  });

}).call(this);
